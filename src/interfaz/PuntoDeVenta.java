/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaz;

import utilerias.Producto;
import utilerias.ListaProducto;
import java.awt.Desktop;
import java.awt.Dialog;
import java.awt.Image;
import java.io.IOException;
import java.net.URI;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import utilerias.AccionReporte;
import utilerias.Archivo;
import utilerias.Conexion;

/**
 *
 * @author 05C4R
 */
public class PuntoDeVenta extends javax.swing.JFrame {
private ArrayList <Producto> a = new ArrayList <>();
private Conexion con;
private int cont=0, id;
private double subtotal,total;
private DefaultTableModel modelo;
private ListaProducto Productos;
private double iva=0.16,pago=0;
private ImageIcon imagen;
private Factura factura;
private Nota nota;
private int id_empleado;
private  Map parametros;
private StringBuilder pru;
private Archivo config;
private ArrayList<String> lectura;
private Configuracion configuracion;
private ResultSet idCuenta;
    /**
     * Creates new form NewJFrame
     * @param id_Cuenta
     */
    public PuntoDeVenta(int id_Cuenta) {

        initComponents();
        config = new Archivo("preferencias.txt");
        configuracion = new Configuracion(this, true);
        lectura = new ArrayList();
        con = new Conexion("root", "05C4R");
        con.conectar();
        idCuenta = con.consultar("SELECT em.id_empleado,em.nombre,cue.id_cuenta as Cuenta FROM Empleado em INNER JOIN Cuenta cue on "
                + "em.Cuenta_id_cuenta = cue.id_cuenta where cue.id_cuenta= " + id_Cuenta);

        try {
            if (idCuenta.next()) {
                id_empleado = idCuenta.getInt("id_empleado");
                vendedorTxt.setText(idCuenta.getString("nombre"));
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error en la base de datos");
        }
        do {
            try {
                lectura = config.lectura();
            } catch (IOException ex) {
                //configuracion.setComprobante(false);
                configuracion.setModalityType(Dialog.ModalityType.APPLICATION_MODAL);
                configuracion.setLocationRelativeTo(null);
                configuracion.setVisible(true);

            }
            
        } while (lectura.isEmpty());
        
        modelo = (DefaultTableModel)listacompraTabla.getModel();
listacompraTabla.setModel(modelo);
        iva = (Double.parseDouble(lectura.get(0))) / 100;

        this.setLocationRelativeTo(null);

        Productos = new ListaProducto();
        factura = new Factura(this, true);
        nota = new Nota(this, true);
        pagoBoton.setEnabled(false);
        facturaRadioButton.setEnabled(true);
        NotaRadioButton.setEnabled(true);
        pru = new StringBuilder();
        parametros = new HashMap();

    }
    private void validacion(){
    if(factura.isClosed()&&!a.isEmpty()){
    pagoBoton.setEnabled(true);
    }else pagoBoton.setEnabled(false);
    
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        eliminarMenuItem = new javax.swing.JMenuItem();
        enviarDialog = new javax.swing.JDialog();
        jPanel2 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        subtotalTxt = new javax.swing.JTextField();
        pagoBoton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        agregarboton = new javax.swing.JButton();
        totalTxt = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        cantidadSpinner = new javax.swing.JSpinner();
        codigotxt = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        pagoTxt = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listacompraTabla = new javax.swing.JTable();
        vendedorTxt = new javax.swing.JTextField();
        cambioTxt = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        cancelarBoton = new javax.swing.JButton();
        imagenLabel = new javax.swing.JLabel();
        facturaRadioButton = new javax.swing.JRadioButton();
        NotaRadioButton = new javax.swing.JRadioButton();

        eliminarMenuItem.setText("Eliminar");
        eliminarMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarMenuItemActionPerformed(evt);
            }
        });
        jPopupMenu1.add(eliminarMenuItem);

        enviarDialog.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        enviarDialog.setModalityType(java.awt.Dialog.ModalityType.APPLICATION_MODAL);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jLabel9.setText("Desea Enviar Comprobante?");

        jButton1.setText("No");

        jButton2.setText("SI");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addComponent(jLabel9)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 66, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 62, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(52, 52, 52))
        );

        javax.swing.GroupLayout enviarDialogLayout = new javax.swing.GroupLayout(enviarDialog.getContentPane());
        enviarDialog.getContentPane().setLayout(enviarDialogLayout);
        enviarDialogLayout.setHorizontalGroup(
            enviarDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        enviarDialogLayout.setVerticalGroup(
            enviarDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        enviarDialog.getAccessibleContext().setAccessibleParent(this);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        subtotalTxt.setEditable(false);
        subtotalTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                subtotalTxtKeyTyped(evt);
            }
        });

        pagoBoton.setText("Pago");
        pagoBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pagoBotonActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jLabel3.setText("Total");

        agregarboton.setText("Agregar");
        agregarboton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarbotonActionPerformed(evt);
            }
        });

        totalTxt.setEditable(false);
        totalTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                totalTxtKeyTyped(evt);
            }
        });

        jLabel7.setText("Cantidad");

        jLabel4.setText("Codigo");

        cantidadSpinner.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(1), Integer.valueOf(1), null, Integer.valueOf(1)));
        cantidadSpinner.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cantidadSpinnerKeyTyped(evt);
            }
        });

        codigotxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                codigotxtKeyTyped(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Arial", 0, 22)); // NOI18N
        jLabel5.setText("Pago");

        pagoTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pagoTxtActionPerformed(evt);
            }
        });
        pagoTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                pagoTxtKeyTyped(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jLabel6.setText("Cambio");

        jLabel1.setText("Vendedor");

        listacompraTabla.setAutoCreateRowSorter(true);
        listacompraTabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Descripcion", "Precio Unitario", "Cantidad", "Subtotal"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Float.class, java.lang.Integer.class, java.lang.Float.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        listacompraTabla.setComponentPopupMenu(jPopupMenu1);
        jScrollPane1.setViewportView(listacompraTabla);

        vendedorTxt.setEditable(false);
        vendedorTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                vendedorTxtKeyTyped(evt);
            }
        });

        cambioTxt.setEditable(false);
        cambioTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cambioTxtKeyTyped(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel2.setText("Subtotal");

        cancelarBoton.setText("Cancelar");
        cancelarBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarBotonActionPerformed(evt);
            }
        });

        imagenLabel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        buttonGroup1.add(facturaRadioButton);
        facturaRadioButton.setText("Factura");
        facturaRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                facturaRadioButtonActionPerformed(evt);
            }
        });

        buttonGroup1.add(NotaRadioButton);
        NotaRadioButton.setText("Nota");
        NotaRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NotaRadioButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jLabel4))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(vendedorTxt, javax.swing.GroupLayout.DEFAULT_SIZE, 137, Short.MAX_VALUE)
                    .addComponent(codigotxt))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jLabel7)
                        .addGap(18, 18, 18)
                        .addComponent(cantidadSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(agregarboton)
                        .addGap(43, 43, 43))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(NotaRadioButton)
                        .addGap(18, 18, 18)
                        .addComponent(facturaRadioButton)
                        .addGap(72, 72, 72)))
                .addComponent(imagenLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(220, 220, 220)
                        .addComponent(jLabel5)
                        .addGap(10, 10, 10)
                        .addComponent(pagoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel6)
                        .addGap(15, 15, 15)
                        .addComponent(cambioTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(cancelarBoton)
                        .addGap(511, 511, 511)
                        .addComponent(pagoBoton)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 560, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addComponent(jLabel2))
                    .addComponent(subtotalTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(80, 80, 80)
                        .addComponent(jLabel3))
                    .addComponent(totalTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(47, 47, 47)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel1)
                                    .addComponent(vendedorTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(36, 36, 36)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(NotaRadioButton)
                                    .addComponent(facturaRadioButton))
                                .addGap(30, 30, 30)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(cantidadSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(agregarboton)
                                    .addComponent(jLabel7)
                                    .addComponent(codigotxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4))))
                        .addGap(38, 38, 38))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(imagenLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jLabel2)
                        .addGap(8, 8, 8)
                        .addComponent(subtotalTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(15, 15, 15)
                        .addComponent(jLabel3)
                        .addGap(1, 1, 1)
                        .addComponent(totalTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(13, 13, 13)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jLabel5))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(pagoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel6))
                    .addComponent(cambioTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cancelarBoton)
                    .addComponent(pagoBoton))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void subtotalTxtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_subtotalTxtKeyTyped
        // TODO add your handling code here:
        evt.consume();
    }//GEN-LAST:event_subtotalTxtKeyTyped

    private void pagoBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pagoBotonActionPerformed
        Date fechaActual = new Date();
        int idventa = 0;
        boolean close=false;
        String hora=new String();
        String fecha=new String();
        SimpleDateFormat horaformato = new SimpleDateFormat("HH:mm");
        SimpleDateFormat fechaformato = new SimpleDateFormat("yyyy-MM-dd");
        hora=horaformato.format(fechaActual.getTime());
        fecha=fechaformato.format(fechaActual.getTime());
        System.out.println(fecha+"+"+hora);
        
        //JasperReport jr=null;yy-MM-dd
        
        
        ResultSet r;
    /*if(!pagoTxt.getText().isEmpty())
    {
        pago=Double.parseDouble(pagoTxt.getText());
     cambioTxt.setText(Double.toString(pago-total));
    }  */   
        if (facturaRadioButton.isSelected()) {
            id = factura.getId();
            if (factura.isClosed()) {
                close=true;
            }
        } else {
            id = nota.getId();
            if (nota.isClosed()) {
             close=true;   
            }
        }
        if (close) {
            con.agregar("INSERT INTO Venta (fecha,hora,total,subtotal,Empleado_id_empleado,Cliente_id_cliente) VALUES(?,?,?,?,?,?)", fecha, hora, total, subtotal, id_empleado, id);

            r = con.consultar("SELECT * FROM venta where hora ='" + hora + "' AND fecha='" + fecha + "' AND total=" + total + " AND subtotal=" + subtotal);
            try {
                if (r.next()) {
                    idventa = r.getInt("id_venta");
                    //System.out.println(idventa);
                    for (Producto a1 : a) {
                        //venta has producto
                        con.agregar("INSERT INTO Detalle_venta (Venta_id_venta,Producto_id_producto,precio,cantidad,importe) VALUES(?,?,?,?,?)", idventa, a1.getId(), a1.getPrecio(), a1.getCantidad(), a1.getSubtotal());
                    }
                }

            } catch (SQLException ex) {
                Logger.getLogger(PuntoDeVenta.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
        AccionReporte report=new AccionReporte();
        //System.out.println(idventa);
        parametros.put("id_venta", idventa);
        if (facturaRadioButton.isSelected()) {
            report.generarPDF("src/reportes/Factura.jasper","src/Comprobante.pdf",parametros);
        }else{
        report.generarPDF("src/reportes/Nota.jasper","src/Comprobante.pdf",parametros);
        }
    
    enviarDialog.pack();
    enviarDialog.setLocationRelativeTo(this);
    enviarDialog.setVisible(true);
    limpiar();
   /*}else{
    JOptionPane.showMessageDialog(null, "Fondos insuficientes");
    }*/
    
   
    }//GEN-LAST:event_pagoBotonActionPerformed
    public void limpiar(){
    modelo = (DefaultTableModel)listacompraTabla.getModel();
listacompraTabla.setModel(modelo);
NotaRadioButton.setSelected(false);
facturaRadioButton.setSelected(false);
codigotxt.setText(null);
cantidadSpinner.setValue(1);
subtotalTxt.setText(null);
totalTxt.setText(null);
pagoTxt.setText(null);
cambioTxt.setText(null);
Productos=new ListaProducto();
imagenLabel.setIcon(null);
cont=0;
subtotal=0;
total=0;
pago=0;
pru=new StringBuilder();
parametros=new HashMap();
    } 
    private void agregarbotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarbotonActionPerformed
        // TODO add your handling code here:

        Object datos[]=new Object[6];
        //ArrayList <Producto> a = new ArrayList <Producto>();
        imagen=con.getFoto("SELECT (imagen) FROM producto where id_producto = "+codigotxt.getText());
        Icon icono = new ImageIcon(imagen.getImage().getScaledInstance(imagenLabel.getWidth(), imagenLabel.getHeight(), Image.SCALE_DEFAULT));
imagenLabel.setIcon(icono);
        int indice;
        con.conectar();
        //modelo = (DefaultTableModel)listacompraTabla.getModel();

        ResultSet r;
        try {
            /*Statement sentencia = con.getCon().createStatement();
            r= sentencia.executeQuery("SELECT * FROM producto where id_producto ="+jTextField4.getText());*/
            r=con.consultar("SELECT * FROM producto where id_producto ="+codigotxt.getText());
            if(r.next())
            {
                if(Productos.buscarProducto(a,r.getInt("id_producto"))==-1)
                {
                    if (r.getInt("existencia") < (Integer) cantidadSpinner.getValue()) {
                        JOptionPane.showMessageDialog(null, "Productos en existancia "+r.getInt("existencia"));
                    } else {
                        a.add(new Producto(r, (Integer) cantidadSpinner.getValue()));
                        /*datos[0]=r.getString("id_producto");
                        datos[1]=r.getString("nombre");
                        datos[2]=r.getFloat("precio_unitario");
                        datos[3]=(Float)jSpinner1.getValue();
                        datos[4]=((Float)jSpinner1.getValue())*r.getInt("precio_unitario");
                        datos[5]=r.getInt("existencia");*/
                        //System.out.println(Arrays.toString(a.get(cont).getDatos()));
                        modelo.addRow(a.get(cont).getDatos());
                        subtotal+=(a.get(cont).getPrecio()*a.get(cont).getCantidad());
                        cont++;
                    }

                }else{
                    indice=Productos.buscarProducto(a,r.getInt("id_producto"));
                    System.out.println(a.get(indice).getCantidad()+(Integer) cantidadSpinner.getValue());
                    if(a.get(indice).getExistencias()>=a.get(indice).getCantidad()+(Integer) cantidadSpinner.getValue()){
                        //a.add(new Producto(r, (Integer) jSpinner1.getValue()));
                        a.get(indice).setCantidad(a.get(indice).getCantidad()+(Integer) cantidadSpinner.getValue());

                        modelo.setValueAt(a.get(indice).getCantidad(), indice, 3);
                        modelo.setValueAt(a.get(indice).getSubtotal(), indice, 4);
                        subtotal+=(a.get(indice).getPrecio()*(Integer) cantidadSpinner.getValue());
                        //cont++;
                    }else{JOptionPane.showMessageDialog(null, "Productos en existancia "+a.get(indice).getExistencias());}

                }

                subtotalTxt.setText(Double.toString( subtotal));//////////////error solo sirve para enteros*/
                total=subtotal+(iva*subtotal);
                totalTxt.setText(Double.toString(total));
               
             facturaRadioButton.setEnabled(true);
             NotaRadioButton.setEnabled(true);
            }
        } catch (SQLException e) {
            System.out.println("easdrr");

        }
        validacion();
    }//GEN-LAST:event_agregarbotonActionPerformed

    private void totalTxtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_totalTxtKeyTyped
        evt.consume();
    }//GEN-LAST:event_totalTxtKeyTyped

    private void cantidadSpinnerKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cantidadSpinnerKeyTyped
        char c=evt.getKeyChar();
        if(!(Character.isDigit(c)))
        {
            evt.consume();
        }
    }//GEN-LAST:event_cantidadSpinnerKeyTyped

    private void codigotxtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_codigotxtKeyTyped
        char c=evt.getKeyChar();
        if(!(Character.isDigit(c)))
        {
            evt.consume();
        }
    }//GEN-LAST:event_codigotxtKeyTyped

    private void pagoTxtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pagoTxtKeyTyped
        // TODO add your handling code here:
        
        char c=evt.getKeyChar();
        
        if(!(Character.isDigit(c)))
        {
            evt.consume();
        }
        pru.append(c);
        System.out.println(pru);
            if(!pru.toString().isEmpty()){
            pago=Double.parseDouble(pru.toString());
            }
     cambioTxt.setText(Double.toString(pago-total));
        
        
          ///      cambioTxt.setText(Double.toString(pago));
    }//GEN-LAST:event_pagoTxtKeyTyped

    private void cambioTxtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cambioTxtKeyTyped
        // TODO add your handling code here:
        evt.consume();
    }//GEN-LAST:event_cambioTxtKeyTyped

    private void eliminarMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarMenuItemActionPerformed
        if (listacompraTabla.getSelectedRow() != -1) {
            subtotal -= a.get(listacompraTabla.getSelectedRow()).getSubtotal();
            subtotalTxt.setText(Double.toString(subtotal));
            totalTxt.setText(Double.toString(subtotal+(iva*subtotal)));
            cont--;
            a.remove(listacompraTabla.getSelectedRow());
            modelo.removeRow(listacompraTabla.getSelectedRow());
            validacion();
        }
    }//GEN-LAST:event_eliminarMenuItemActionPerformed

    private void vendedorTxtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_vendedorTxtKeyTyped
        // TODO add your handling code here:
        evt.consume();
    }//GEN-LAST:event_vendedorTxtKeyTyped

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        //mostar la factura o comprobante
       // Runtime aplicacion = Runtime.getRuntime(); 
       //Desktop.getDesktop().browse(new URI("C:/Users/05C4R/Documents/NetBeansProjects/PuntoDeVenta/src/puntodeventa/newhtml.html")); 
        Archivo html=new Archivo("correo.html");
         
        ArrayList<String> contenidoHtml=new ArrayList();
        
       /* String emisorCorreo="oscar_acu@hotmail.com";
       String emisorPass="MAoS.H.I.E.L.D.ptlMa19:00PMobS";*/
       String receptorCorreo="05c4r.drv@gmail.com";
       
        contenidoHtml.add("<html>");
        contenidoHtml.add("<head>");
        contenidoHtml.add("<title>Formulario</title>");
        contenidoHtml.add("<meta charset=\"UTF-8\">");
        contenidoHtml.add("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">");
        contenidoHtml.add("</head>");
        contenidoHtml.add("<body>");
        contenidoHtml.add("<applet  archive=\"applet/CorreoApplet.jar\" code=\"correoapplet.Correo\" width=600 height=700>");
        contenidoHtml.add("<param name=\"emisorCorreo\" value=\"" + lectura.get(2) + "\">");
        contenidoHtml.add("<param name=\"emisorPass\" value=\"" + lectura.get(3) + "\">");
        contenidoHtml.add("<param name=\"servidorSMTP\" value=\"smtp." + lectura.get(4) + "\">");
        contenidoHtml.add("<param name=\"receptorCorreo\" value=\"" + receptorCorreo + "\">");
        contenidoHtml.add("</applet>");
        contenidoHtml.add("</body>");
        contenidoHtml.add("</html>");
        
       
    try {
        html.escribir(contenidoHtml);
    } catch (IOException ex) {
         JOptionPane.showMessageDialog(null, "Error con el archivo"+ex.getMessage());
    }
        
       if(java.awt.Desktop.isDesktopSupported()){
 try{
      Desktop dk = Desktop.getDesktop();
      dk.browse(new URI("correo.html"));
 }catch(Exception e){
     //System.out.println("Error al abrir URL: "+e.getMessage());
     JOptionPane.showMessageDialog(null, "Error con el navegador"+e.getMessage());
 }
 enviarDialog.setVisible(false);
} 
    }//GEN-LAST:event_jButton2ActionPerformed

    private void facturaRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_facturaRadioButtonActionPerformed
    // TODO add your handling code here:
    String rfc = JOptionPane.showInputDialog(null,"ingrese RFC");
     ResultSet r;
     r = con.consultar("SELECT id_cliente FROM Cliente where rfc = '" + rfc+"'");
    try {
        if (r.next()) {
            id=r.getInt("id_cliente");
            JOptionPane.showMessageDialog(null, "Este usuario ya existe");
        }else{
        factura.setComprobante(false);
        factura.setLocationRelativeTo(null);
        factura.setVisible(true);
        
        }
    } catch (SQLException ex) {
        Logger.getLogger(PuntoDeVenta.class.getName()).log(Level.SEVERE, null, ex);
    }
        
         pagoBoton.setVisible(true);
        
        //comprobante=true;

        /*factura.setVisible(true);
        factura.setLocationRelativeTo(null);
        if(factura.isClosed()){
            NotaRadioButton.setSelected(true);
        }
        validacion();*/
         validacion();
    }//GEN-LAST:event_facturaRadioButtonActionPerformed

    private void NotaRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NotaRadioButtonActionPerformed
        
        nota.setLocationRelativeTo(null);
        nota.setVisible(false);
        validacion();
        
    }//GEN-LAST:event_NotaRadioButtonActionPerformed

    private void pagoTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pagoTxtActionPerformed
        // TODO add your handling code here:
        pago=0;
    }//GEN-LAST:event_pagoTxtActionPerformed

    private void cancelarBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarBotonActionPerformed
        // TODO add your handling code here:
        limpiar();
    }//GEN-LAST:event_cancelarBotonActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
       limpiar();
    }//GEN-LAST:event_formWindowClosing

   

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Dos".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PuntoDeVenta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PuntoDeVenta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PuntoDeVenta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PuntoDeVenta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PuntoDeVenta(1).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton NotaRadioButton;
    private javax.swing.JButton agregarboton;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JTextField cambioTxt;
    private javax.swing.JButton cancelarBoton;
    private javax.swing.JSpinner cantidadSpinner;
    private javax.swing.JTextField codigotxt;
    private javax.swing.JMenuItem eliminarMenuItem;
    private javax.swing.JDialog enviarDialog;
    private javax.swing.JRadioButton facturaRadioButton;
    private javax.swing.JLabel imagenLabel;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable listacompraTabla;
    private javax.swing.JButton pagoBoton;
    private javax.swing.JTextField pagoTxt;
    private javax.swing.JTextField subtotalTxt;
    private javax.swing.JTextField totalTxt;
    private javax.swing.JTextField vendedorTxt;
    // End of variables declaration//GEN-END:variables
}
